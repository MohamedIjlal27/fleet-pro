# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  15.156.206.160;  # DEV Frontend IP
        root         /var/www/html;   # Path to your frontend build (React app)
        index        index.html index.htm;

        # Serve the frontend (React app)
        location / {
            try_files $uri /index.html;   # Ensure react-router works
        }

        # Websocket proxy
        location /socket.io/ {
            proxy_pass http://35.182.58.212:3000/socket.io/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
        }

        # Proxy API requests to the NestJS backend
        location /api {
            # Proxy pass to your NestJS backend
            proxy_pass http://35.182.58.212:3000/api;  # Adjust to your backend's IP and port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Set timeouts to prevent long-running connections from timing out
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            send_timeout 120s;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' 'http://15.156.206.160:5173' always;  # Update with your frontend IP
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Handle preflight OPTIONS requests
            if ($request_method = OPTIONS ) {
                return 204;
            }
        }

        # Custom error pages
        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    # Settings for a TLS-enabled server (if applicable)
    #
    # server {
    #     listen       443 ssl http2;
    #     listen       [::]:443 ssl http2;
    #     server_name  your_domain.com;
    #     root         /usr/share/nginx/html;
    #
    #     ssl_certificate "/etc/pki/nginx/server.crt";
    #     ssl_certificate_key "/etc/pki/nginx/private/server.key";
    #     ssl_session_cache shared:SSL:1m;
    #     ssl_session_timeout  10m;
    #     ssl_ciphers PROFILE=SYSTEM;
    #     ssl_prefer_server_ciphers on;
    #
    #     include /etc/nginx/default.d/*.conf;
    #
    #     error_page 404 /404.html;
    #     location = /404.html {
    #     }
    #
    #     error_page 500 502 503 504 /50x.html;
    #     location = /50x.html {
    #     }
    # }
}